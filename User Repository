checkBudget(budgetId: number) {
    const userId = localStorage.getItem("Id");
    if (userId != null) {
        const id: number = parseInt(userId, 10);

        this.budgetService.checkBudget(budgetId, id).subscribe(res => {
            let totalExpenses = 0;
            let content = '<br>';

            // Calculate total expenses and build the content string
            res.forEach((expense: any, index: number) => {
                totalExpenses += expense.amount;
                content += `${index + 1}. Amount: ${expense.amount}, Date: ${expense.date}, Description: ${expense.description}, Category: ${expense.category}<br>`;
            });

            // Fetch the budget amount and compare it with total expenses
            this.budgetService.getBudgetAmountById(budgetId).subscribe(budgetAmount => {
                console.log("Total expense:", totalExpenses);
                console.log("Budget amount:", budgetAmount);

                let result: number = Number(budgetAmount);  // Convert the budget amount to a number
                let comparisonMessage: string;

                // Comparison logic
                if (totalExpenses < result) {
                    comparisonMessage = `You have saved $${(result - totalExpenses).toFixed(2)}.`;
                } else if (totalExpenses > result) {
                    comparisonMessage = `You have exceeded the budget by $${(totalExpenses - result).toFixed(2)}.`;
                } else {
                    comparisonMessage = "You have perfectly matched your budget!";
                }

                console.log(comparisonMessage);

                // Add the comparison message to the content
                content += `<b>Result:</b> ${comparisonMessage}<br>`;

                // Show the result in the modal
                this.modal.confirm({
                    nzTitle: 'Expense Details',
                    nzContent: content,
                    nzOnOk: () => console.log('OK clicked')
                });

            }, error => {
                this.message.error("Error while getting budget amount", { nzDuration: 5000 });
            });

        }, error => {
            this.message.error("Error while checking budget", { nzDuration: 5000 });
        });
    }
}
