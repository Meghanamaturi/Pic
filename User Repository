<ng-container *ngIf="currentPage === 'register'">
  <app-registration (registerSuccess)="onRegisterSuccess()"></app-registration>
</ng-container>

<ng-container *ngIf="currentPage === 'login'">
  <app-login (loginSuccess)="onLoginSuccess()"></app-login>
</ng-container>

<button (click)="goToLogin()">Already have an account? Login</button>
<button (click)="goToRegister()">Create an account</button>







export class AppComponent {
  currentPage: 'register' | 'login' = 'register';

  goToLogin() {
    this.currentPage = 'login';
  }

  goToRegister() {
    this.currentPage = 'register';
  }

  onRegisterSuccess() {
    this.goToLogin(); // Switch to login after successful registration
  }

  onLoginSuccess() {
    // Handle successful login (e.g., redirect to dashboard)
  }
}



Optional<User> userOptional = userRepository.findByEmail(loginDto.getEmail());
    if (userOptional.isPresent() && passwordMatches(loginDto.getPassword(), userOptional.get().getPassword())) {
        return ResponseEntity.ok(userOptional.get());
    }
    return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Invalid credentials");
}

// Method to check password (hashing may be needed)
private boolean passwordMatches(String rawPassword, String storedPassword) {
    return rawPassword.equals(storedPassword); // Use a proper hashing method
}
